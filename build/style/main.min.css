/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html{box-sizing:border-box;height:100%;font-size:16px}*,::after,::before{box-sizing:inherit;margin:0;padding:0}body{line-height:1.42;height:100%;font-family:Circe,sans-serif;font-weight:400;color:var(--mainFontColor);background-color:#fff}h1,h2,h3,h4,h5,h6{margin:0;padding:0}.no-scroll-body{overflow:hidden}.container{max-width:1345px;width:100%;padding:0 40px;margin:0 auto}section{margin-top:80px}a{text-decoration:none;color:inherit}img,svg{max-width:100%;max-height:100%;display:inline-block;-o-object-fit:cover;object-fit:cover}.wrapper{min-height:100%;display:flex;flex-direction:column;position:relative}main{flex-grow:1}ul{list-style-type:none}@font-face{font-family:Circe;src:url(../fonts/Circe-Regular.woff2),url(../fonts/Circe-Regular.woff);font-weight:400;font-display:swap;font-style:normal}@font-face{font-family:Circe;src:url(../fonts/Circe-ExtraLight.woff2),url(../fonts/Circe-ExtraLight.woff);font-weight:200;font-display:swap;font-style:normal}@font-face{font-family:Circe;src:url(../fonts/Circe-ExtraBold.woff2),url(../fonts/Circe-ExtraBold.woff);font-weight:900;font-display:swap;font-style:normal}@font-face{font-family:Circe;src:url(../fonts/Circe-Bold.woff2),url(../fonts/Circe-Bold.woff);font-weight:700;font-display:swap;font-style:normal}:root{--mainFontColor:#000;--orange:#ff650c}section.services .services__list{display:flex;flex-wrap:wrap;margin:0 -8px}section.services .services__list .services__item{border:1px solid #ccc;transition:.3s;text-align:center;width:calc(100%/12*4 - 16px);margin:0 8px;min-height:340px}section.services .services__list .services__item .card{display:block;min-height:100%;padding:50px 30px 50px;position:relative}section.services .services__list .services__item svg{max-width:59px;max-height:59px;margin-bottom:34px}section.services .services__list .services__item .card-heading{margin-bottom:10px;font-weight:700;font-size:18px;line-height:22px;text-transform:uppercase}section.services .services__list .services__item .card-text{line-height:24px;font-size:14px}section.services .services__list .services__item .more{color:#ff650c;font-weight:700;font-size:14px;position:absolute;bottom:30px;left:0;right:0;margin:0 auto;max-width:75px}section.services .services__list .services__item .more::after{content:"";position:absolute;top:4px;right:-15px;width:2px;height:6px;background:#ff650c;border-radius:5px;transform:rotate(135deg)}section.services .services__list .services__item .more::before{content:"";position:absolute;top:8px;right:-15px;width:2px;height:6px;background:#ff650c;border-radius:5px;transform:rotate(45deg)}section.services .services__list .services__item:hover{background-color:#f5f6f6}section.services .services__list .services__item:nth-child(-n+3){margin-bottom:16px}section.tab-section{background-color:#f5f6f6;padding-top:32px}section.tab-section .tab-navigation{color:#747474;border-bottom:1px solid #ccc}section.tab-section .tab-navigation .container{display:flex;flex-wrap:wrap}section.tab-section .tab-navigation .tab-btn{padding:12px 30px;font-weight:700;position:relative}section.tab-section .tab-navigation .tab-btn.active::before{content:"";position:absolute;bottom:0;left:0;width:100%;height:3px;background-color:var(--orange)}section.tab-section .tab-content{margin-top:28px}section.tab-section .tab-content .tab-body{display:none;padding-bottom:60px}section.tab-section .tab-content .tab-body.active{display:block}section.tab-section .tab-content .tab-body__heading h4{font-size:20px;line-height:36px}section.tab-section .tab-content .tab-body .send-mail a{color:var(--orange)}section.tab-section .tab-content .tab-body__content{background-color:#efefef;padding:40px}section.tab-section .tab-content .tab-body__content>h3{font-size:28px;font-weight:800;margin-bottom:24px}section.tab-section .tab-content .tab-body__content form{padding-top:28px}section.tab-section .tab-content .tab-body__content form .form-labels{display:flex;margin:0 -8px}section.tab-section .tab-content .tab-body__content form .form-labels .form-label{width:calc(100%/12*4 - 16px);margin:0 8px}section.tab-section .tab-content .tab-body__content form .form-labels .form-label label{display:block;position:relative}section.tab-section .tab-content .tab-body__content form .form-labels .form-label label .input-signature{font-weight:700;position:absolute;top:-25px;left:0}section.tab-section .tab-content .tab-body__content form .form-labels .form-label label .input-signature::before{position:absolute;top:-6px;right:-15px;width:7px;height:7px;content:url(../image/tab-section/necessarily.svg)}section.tab-section .tab-content .tab-body__content form .form-labels .form-label input{width:100%;border:none;padding:13px}section.tab-section .tab-content .tab-body__content form .form-labels .form-label:last-child .input-signature::before{content:none}section.tab-section .tab-content .tab-body__content form .uploadFile{display:flex;flex-wrap:wrap;align-items:center;margin-top:24px}section.tab-section .tab-content .tab-body__content form .uploadFile h3{font-size:20px;line-height:36px}section.tab-section .tab-content .tab-body__content form .uploadFile .picture-list{width:100%;min-height:50px}section.tab-section .tab-content .tab-body__content form .uploadFile label span{display:inline-block;border:1px solid #747474;padding:20px;font-weight:700;font-size:12px;cursor:pointer}section.tab-section .tab-content .tab-body__content form .uploadFile label input{visibility:hidden;width:0;margin-left:16px}section.tab-section .tab-content .tab-body__content form input[type=submit]{margin-top:24px;background-color:var(--orange);border:none;color:#fff;padding:16px 54px;cursor:pointer}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
